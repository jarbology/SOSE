-- Copied from SDL_keysym.h
local SDL_Scancode = {
    RETURN = 40,
    ESCAPE = 41,
    BACKSPACE = 42,
    TAB = 43,
    SPACE = 44,

    MINUS = 45,
    EQUALS = 46,
    LEFTBRACKET = 47,
    RIGHTBRACKET = 48,
    BACKSLASH = 49, 
    NONUSHASH = 50,
    SEMICOLON = 51,
    APOSTROPHE = 52,
    GRAVE = 53, 
    COMMA = 54,
    PERIOD = 55,
    SLASH = 56,

    CAPSLOCK = 57,

    F1 = 58,
    F2 = 59,
    F3 = 60,
    F4 = 61,
    F5 = 62,
    F6 = 63,
    F7 = 64,
    F8 = 65,
    F9 = 66,
    F10 = 67,
    F11 = 68,
    F12 = 69,

    PRINTSCREEN = 70,
    SCROLLLOCK = 71,
    PAUSE = 72,
    INSERT = 73,
    HOME = 74,
    PAGEUP = 75,
    DELETE = 76,
    END = 77,
    PAGEDOWN = 78,
    RIGHT = 79,
    LEFT = 80,
    DOWN = 81,
    UP = 82,

    NUMLOCKCLEAR = 83,
    KP_DIVIDE = 84,
    KP_MULTIPLY = 85,
    KP_MINUS = 86,
    KP_PLUS = 87,
    KP_ENTER = 88,
    KP_1 = 89,
    KP_2 = 90,
    KP_3 = 91,
    KP_4 = 92,
    KP_5 = 93,
    KP_6 = 94,
    KP_7 = 95,
    KP_8 = 96,
    KP_9 = 97,
    KP_0 = 98,
    KP_PERIOD = 99,

    NONUSBACKSLASH = 100,
    APPLICATION = 101,
    POWER = 102,
    KP_EQUALS = 103,
    F13 = 104,
    F14 = 105,
    F15 = 106,
    F16 = 107,
    F17 = 108,
    F18 = 109,
    F19 = 110,
    F20 = 111,
    F21 = 112,
    F22 = 113,
    F23 = 114,
    F24 = 115,
    EXECUTE = 116,
    HELP = 117,
    MENU = 118,
    SELECT = 119,
    STOP = 120,
    AGAIN = 121,
    UNDO = 122,
    CUT = 123,
    COPY = 124,
    PASTE = 125,
    FIND = 126,
    MUTE = 127,
    VOLUMEUP = 128,
    VOLUMEDOWN = 129,
    KP_COMMA = 133,
    KP_EQUALSAS400 = 134,

    ALTERASE = 153,
    SYSREQ = 154,
    CANCEL = 155,
    CLEAR = 156,
    PRIOR = 157,
    RETURN2 = 158,
    SEPARATOR = 159,
    OUT = 160,
    OPER = 161,
    CLEARAGAIN = 162,
    CRSEL = 163,
    EXSEL = 164,

    KP_00 = 176,
    KP_000 = 177,
    THOUSANDSSEPARATOR = 178,
    DECIMALSEPARATOR = 179,
    CURRENCYUNIT = 180,
    CURRENCYSUBUNIT = 181,
    KP_LEFTPAREN = 182,
    KP_RIGHTPAREN = 183,
    KP_LEFTBRACE = 184,
    KP_RIGHTBRACE = 185,
    KP_TAB = 186,
    KP_BACKSPACE = 187,
    KP_A = 188,
    KP_B = 189,
    KP_C = 190,
    KP_D = 191,
    KP_E = 192,
    KP_F = 193,
    KP_XOR = 194,
    KP_POWER = 195,
    KP_PERCENT = 196,
    KP_LESS = 197,
    KP_GREATER = 198,
    KP_AMPERSAND = 199,
    KP_DBLAMPERSAND = 200,
    KP_VERTICALBAR = 201,
    KP_DBLVERTICALBAR = 202,
    KP_COLON = 203,
    KP_HASH = 204,
    KP_SPACE = 205,
    KP_AT = 206,
    KP_EXCLAM = 207,
    KP_MEMSTORE = 208,
    KP_MEMRECALL = 209,
    KP_MEMCLEAR = 210,
    KP_MEMADD = 211,
    KP_MEMSUBTRACT = 212,
    KP_MEMMULTIPLY = 213,
    KP_MEMDIVIDE = 214,
    KP_PLUSMINUS = 215,
    KP_CLEAR = 216,
    KP_CLEARENTRY = 217,
    KP_BINARY = 218,
    KP_OCTAL = 219,
    KP_DECIMAL = 220,
    KP_HEXADECIMAL = 221,

    LCTRL = 224,
    LSHIFT = 225,
    LALT = 226,
    LGUI = 227,
    RCTRL = 228,
    RSHIFT = 229,
    RALT = 230,
    RGUI = 231,

    MODE = 257,
    AUDIONEXT = 258,
    AUDIOPREV = 259,
    AUDIOSTOP = 260,
    AUDIOPLAY = 261,
    AUDIOMUTE = 262,
    MEDIASELECT = 263,
    WWW = 264,
    MAIL = 265,
    CALCULATOR = 266,
    COMPUTER = 267,
    AC_SEARCH = 268,
    AC_HOME = 269,
    AC_BACK = 270,
    AC_FORWARD = 271,
    AC_STOP = 272,
    AC_REFRESH = 273,
    AC_BOOKMARKS = 274,

    BRIGHTNESSDOWN = 275,
    BRIGHTNESSUP = 276,
    DISPLAYSWITCH = 277,
    KBDILLUMTOGGLE = 278,
    KBDILLUMDOWN = 279,
    KBDILLUMUP = 280,
    EJECT = 281,
    SLEEP = 282,

    APP1 = 283,
    APP2 = 284
}

function SDL_Scancode.TO_KEYCODE(X)
	return X + 2^30
end

local codes = {
    UNKNOWN = 0,

    RETURN = '\r',
    ESCAPE = 27,
    BACKSPACE = '\b',
    TAB = '\t',
    SPACE = ' ',
    EXCLAIM = '!',
    QUOTEDBL = '"',
    HASH = '#',
    PERCENT = '%',
    DOLLAR = '$',
    AMPERSAND = '&',
    QUOTE = '\'',
    LEFTPAREN = '(',
    RIGHTPAREN = ')',
    ASTERISK = '*',
    PLUS = '+',
    COMMA = ',',
    MINUS = '-',
    PERIOD = '.',
    SLASH = '/',
    NUM_0 = '0',
    NUM_1 = '1',
    NUM_2 = '2',
    NUM_3 = '3',
    NUM_4 = '4',
    NUM_5 = '5',
    NUM_6 = '6',
    NUM_7 = '7',
    NUM_8 = '8',
    NUM_9 = '9',
    COLON = ':',
    SEMICOLON = ';',
    LESS = '<',
    EQUALS = '=',
    GREATER = '>',
    QUESTION = '?',
    AT = '@',
    LEFTBRACKET = '[',
    BACKSLASH = '\\',
    RIGHTBRACKET = ']',
    CARET = '^',
    UNDERSCORE = '_',
    BACKQUOTE = '`',
    A = 'a',
    B = 'b',
    C = 'c',
    D = 'd',
    E = 'e',
    F = 'f',
    G = 'g',
    H = 'h',
    I = 'i',
    J = 'j',
    K = 'k',
    L = 'l',
    M = 'm',
    N = 'n',
    O = 'o',
    P = 'p',
    Q = 'q',
    R = 'r',
    S = 's',
    T = 't',
    U = 'u',
    V = 'v',
    W = 'w',
    X = 'x',
    Y = 'y',
    Z = 'z',

    CAPSLOCK = SDL_Scancode.TO_KEYCODE(SDL_Scancode.CAPSLOCK),

    F1 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F1),
    F2 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F2),
    F3 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F3),
    F4 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F4),
    F5 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F5),
    F6 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F6),
    F7 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F7),
    F8 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F8),
    F9 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F9),
    F10 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F10),
    F11 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F11),
    F12 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F12),

    PRINTSCREEN = SDL_Scancode.TO_KEYCODE(SDL_Scancode.PRINTSCREEN),
    SCROLLLOCK = SDL_Scancode.TO_KEYCODE(SDL_Scancode.SCROLLLOCK),
    PAUSE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.PAUSE),
    INSERT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.INSERT),
    HOME = SDL_Scancode.TO_KEYCODE(SDL_Scancode.HOME),
    PAGEUP = SDL_Scancode.TO_KEYCODE(SDL_Scancode.PAGEUP),
    DELETE = '\177',
    END = SDL_Scancode.TO_KEYCODE(SDL_Scancode.END),
    PAGEDOWN = SDL_Scancode.TO_KEYCODE(SDL_Scancode.PAGEDOWN),
    RIGHT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.RIGHT),
    LEFT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.LEFT),
    DOWN = SDL_Scancode.TO_KEYCODE(SDL_Scancode.DOWN),
    UP = SDL_Scancode.TO_KEYCODE(SDL_Scancode.UP),

    NUMLOCKCLEAR = SDL_Scancode.TO_KEYCODE(SDL_Scancode.NUMLOCKCLEAR),
    KP_DIVIDE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_DIVIDE),
    KP_MULTIPLY = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_MULTIPLY),
    KP_MINUS = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_MINUS),
    KP_PLUS = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_PLUS),
    KP_ENTER = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_ENTER),
    KP_1 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_1),
    KP_2 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_2),
    KP_3 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_3),
    KP_4 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_4),
    KP_5 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_5),
    KP_6 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_6),
    KP_7 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_7),
    KP_8 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_8),
    KP_9 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_9),
    KP_0 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_0),
    KP_PERIOD = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_PERIOD),

    APPLICATION = SDL_Scancode.TO_KEYCODE(SDL_Scancode.APPLICATION),
    POWER = SDL_Scancode.TO_KEYCODE(SDL_Scancode.POWER),
    KP_EQUALS = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_EQUALS),
    F13 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F13),
    F14 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F14),
    F15 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F15),
    F16 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F16),
    F17 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F17),
    F18 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F18),
    F19 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F19),
    F20 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F20),
    F21 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F21),
    F22 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F22),
    F23 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F23),
    F24 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.F24),
    EXECUTE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.EXECUTE),
    HELP = SDL_Scancode.TO_KEYCODE(SDL_Scancode.HELP),
    MENU = SDL_Scancode.TO_KEYCODE(SDL_Scancode.MENU),
    SELECT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.SELECT),
    STOP = SDL_Scancode.TO_KEYCODE(SDL_Scancode.STOP),
    AGAIN = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AGAIN),
    UNDO = SDL_Scancode.TO_KEYCODE(SDL_Scancode.UNDO),
    CUT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.CUT),
    COPY = SDL_Scancode.TO_KEYCODE(SDL_Scancode.COPY),
    PASTE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.PASTE),
    FIND = SDL_Scancode.TO_KEYCODE(SDL_Scancode.FIND),
    MUTE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.MUTE),
    VOLUMEUP = SDL_Scancode.TO_KEYCODE(SDL_Scancode.VOLUMEUP),
    VOLUMEDOWN = SDL_Scancode.TO_KEYCODE(SDL_Scancode.VOLUMEDOWN),
    KP_COMMA = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_COMMA),
    KP_EQUALSAS400 =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_EQUALSAS400),

    ALTERASE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.ALTERASE),
    SYSREQ = SDL_Scancode.TO_KEYCODE(SDL_Scancode.SYSREQ),
    CANCEL = SDL_Scancode.TO_KEYCODE(SDL_Scancode.CANCEL),
    CLEAR = SDL_Scancode.TO_KEYCODE(SDL_Scancode.CLEAR),
    PRIOR = SDL_Scancode.TO_KEYCODE(SDL_Scancode.PRIOR),
    RETURN2 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.RETURN2),
    SEPARATOR = SDL_Scancode.TO_KEYCODE(SDL_Scancode.SEPARATOR),
    OUT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.OUT),
    OPER = SDL_Scancode.TO_KEYCODE(SDL_Scancode.OPER),
    CLEARAGAIN = SDL_Scancode.TO_KEYCODE(SDL_Scancode.CLEARAGAIN),
    CRSEL = SDL_Scancode.TO_KEYCODE(SDL_Scancode.CRSEL),
    EXSEL = SDL_Scancode.TO_KEYCODE(SDL_Scancode.EXSEL),

    KP_00 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_00),
    KP_000 = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_000),
    THOUSANDSSEPARATOR =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.THOUSANDSSEPARATOR),
    DECIMALSEPARATOR =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.DECIMALSEPARATOR),
    CURRENCYUNIT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.CURRENCYUNIT),
    CURRENCYSUBUNIT =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.CURRENCYSUBUNIT),
    KP_LEFTPAREN = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_LEFTPAREN),
    KP_RIGHTPAREN = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_RIGHTPAREN),
    KP_LEFTBRACE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_LEFTBRACE),
    KP_RIGHTBRACE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_RIGHTBRACE),
    KP_TAB = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_TAB),
    KP_BACKSPACE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_BACKSPACE),
    KP_A = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_A),
    KP_B = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_B),
    KP_C = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_C),
    KP_D = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_D),
    KP_E = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_E),
    KP_F = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_F),
    KP_XOR = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_XOR),
    KP_POWER = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_POWER),
    KP_PERCENT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_PERCENT),
    KP_LESS = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_LESS),
    KP_GREATER = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_GREATER),
    KP_AMPERSAND = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_AMPERSAND),
    KP_DBLAMPERSAND =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_DBLAMPERSAND),
    KP_VERTICALBAR =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_VERTICALBAR),
    KP_DBLVERTICALBAR =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_DBLVERTICALBAR),
    KP_COLON = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_COLON),
    KP_HASH = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_HASH),
    KP_SPACE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_SPACE),
    KP_AT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_AT),
    KP_EXCLAM = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_EXCLAM),
    KP_MEMSTORE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_MEMSTORE),
    KP_MEMRECALL = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_MEMRECALL),
    KP_MEMCLEAR = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_MEMCLEAR),
    KP_MEMADD = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_MEMADD),
    KP_MEMSUBTRACT =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_MEMSUBTRACT),
    KP_MEMMULTIPLY =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_MEMMULTIPLY),
    KP_MEMDIVIDE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_MEMDIVIDE),
    KP_PLUSMINUS = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_PLUSMINUS),
    KP_CLEAR = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_CLEAR),
    KP_CLEARENTRY = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_CLEARENTRY),
    KP_BINARY = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_BINARY),
    KP_OCTAL = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_OCTAL),
    KP_DECIMAL = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_DECIMAL),
    KP_HEXADECIMAL =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.KP_HEXADECIMAL),

    LCTRL = SDL_Scancode.TO_KEYCODE(SDL_Scancode.LCTRL),
    LSHIFT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.LSHIFT),
    LALT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.LALT),
    LGUI = SDL_Scancode.TO_KEYCODE(SDL_Scancode.LGUI),
    RCTRL = SDL_Scancode.TO_KEYCODE(SDL_Scancode.RCTRL),
    RSHIFT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.RSHIFT),
    RALT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.RALT),
    RGUI = SDL_Scancode.TO_KEYCODE(SDL_Scancode.RGUI),

    MODE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.MODE),

    AUDIONEXT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AUDIONEXT),
    AUDIOPREV = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AUDIOPREV),
    AUDIOSTOP = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AUDIOSTOP),
    AUDIOPLAY = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AUDIOPLAY),
    AUDIOMUTE = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AUDIOMUTE),
    MEDIASELECT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.MEDIASELECT),
    WWW = SDL_Scancode.TO_KEYCODE(SDL_Scancode.WWW),
    MAIL = SDL_Scancode.TO_KEYCODE(SDL_Scancode.MAIL),
    CALCULATOR = SDL_Scancode.TO_KEYCODE(SDL_Scancode.CALCULATOR),
    COMPUTER = SDL_Scancode.TO_KEYCODE(SDL_Scancode.COMPUTER),
    AC_SEARCH = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AC_SEARCH),
    AC_HOME = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AC_HOME),
    AC_BACK = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AC_BACK),
    AC_FORWARD = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AC_FORWARD),
    AC_STOP = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AC_STOP),
    AC_REFRESH = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AC_REFRESH),
    AC_BOOKMARKS = SDL_Scancode.TO_KEYCODE(SDL_Scancode.AC_BOOKMARKS),

    BRIGHTNESSDOWN =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.BRIGHTNESSDOWN),
    BRIGHTNESSUP = SDL_Scancode.TO_KEYCODE(SDL_Scancode.BRIGHTNESSUP),
    DISPLAYSWITCH = SDL_Scancode.TO_KEYCODE(SDL_Scancode.DISPLAYSWITCH),
    KBDILLUMTOGGLE =
        SDL_Scancode.TO_KEYCODE(SDL_Scancode.KBDILLUMTOGGLE),
    KBDILLUMDOWN = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KBDILLUMDOWN),
    KBDILLUMUP = SDL_Scancode.TO_KEYCODE(SDL_Scancode.KBDILLUMUP),
    EJECT = SDL_Scancode.TO_KEYCODE(SDL_Scancode.EJECT),
    SLEEP = SDL_Scancode.TO_KEYCODE(SDL_Scancode.SLEEP)
}

for keyName, keyValue in pairs(codes) do
	if type(keyValue) == 'string' then
		codes[keyName] = keyValue:byte()
	end
end

return codes
